// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plugin should add babelLoaderOptions when is defined 1`] = `
Object {
  "entry": Object {},
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\\\\\.css/,
        "use": "style-loader",
      },
      Object {
        "test": /\\.mdx\\?\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
            "options": Object {
              "babelrc": false,
            },
          },
          Object {
            "loader": "@mdx-js/loader",
            "options": Object {
              "compilers": Array [
                [Function],
              ],
              "hastPlugins": Array [
                [Function],
              ],
              "mdPlugins": Array [
                Array [
                  [Function],
                  undefined,
                ],
                Array [
                  [Function],
                  undefined,
                ],
              ],
            },
          },
        ],
      },
    ],
  },
  "optimization": Object {},
}
`;

exports[`plugin should combine mdx loader options when mdxLoaderOptions is defined 1`] = `
Object {
  "entry": Object {},
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\\\\\.css/,
        "use": "style-loader",
      },
      Object {
        "test": /\\.mdx\\?\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
          },
          Object {
            "loader": "@mdx-js/loader",
            "options": Object {
              "compilers": Array [
                "c",
                [Function],
              ],
              "hastPlugins": Array [
                "b",
                [Function],
              ],
              "mdPlugins": Array [
                Array [
                  [Function],
                  undefined,
                ],
                Array [
                  [Function],
                  undefined,
                ],
                "a",
              ],
            },
          },
        ],
      },
    ],
  },
  "optimization": Object {},
}
`;

exports[`plugin should exclude babel loader when babelLoaderOptions = false 1`] = `
Object {
  "entry": Object {},
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\\\\\.css/,
        "use": "style-loader",
      },
      Object {
        "test": /\\.mdx\\?\\$/,
        "use": Array [
          Object {
            "loader": "@mdx-js/loader",
            "options": Object {
              "compilers": Array [
                [Function],
              ],
              "hastPlugins": Array [
                [Function],
              ],
              "mdPlugins": Array [
                Array [
                  [Function],
                  undefined,
                ],
                Array [
                  [Function],
                  undefined,
                ],
              ],
            },
          },
        ],
      },
    ],
  },
  "optimization": Object {},
}
`;

exports[`plugin should merge to empty initial config 1`] = `
Object {
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\.mdx\\?\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
          },
          Object {
            "loader": "@mdx-js/loader",
            "options": Object {
              "compilers": Array [
                [Function],
              ],
              "hastPlugins": Array [
                [Function],
              ],
              "mdPlugins": Array [
                Array [
                  [Function],
                  undefined,
                ],
                Array [
                  [Function],
                  undefined,
                ],
              ],
            },
          },
        ],
      },
    ],
  },
}
`;

exports[`plugin should merge to initial config with a few things 1`] = `
Object {
  "entry": Object {},
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\\\\\.css/,
        "use": "style-loader",
      },
      Object {
        "test": /\\.mdx\\?\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
          },
          Object {
            "loader": "@mdx-js/loader",
            "options": Object {
              "compilers": Array [
                [Function],
              ],
              "hastPlugins": Array [
                [Function],
              ],
              "mdPlugins": Array [
                Array [
                  [Function],
                  undefined,
                ],
                Array [
                  [Function],
                  undefined,
                ],
              ],
            },
          },
        ],
      },
    ],
  },
  "optimization": Object {},
}
`;

exports[`plugin should override "test" when rule is defined 1`] = `
Object {
  "entry": Object {},
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\\\\\.css/,
        "use": "style-loader",
      },
      Object {
        "exclude": Array [
          "foo.mdx",
        ],
        "test": /\\(\\.mdx\\)\\|\\(\\.mdy\\)\\?\\$/,
        "use": Array [
          Object {
            "loader": "babel-loader",
          },
          Object {
            "loader": "@mdx-js/loader",
            "options": Object {
              "compilers": Array [
                [Function],
              ],
              "hastPlugins": Array [
                [Function],
              ],
              "mdPlugins": Array [
                Array [
                  [Function],
                  undefined,
                ],
                Array [
                  [Function],
                  undefined,
                ],
              ],
            },
          },
        ],
      },
    ],
  },
  "optimization": Object {},
}
`;
